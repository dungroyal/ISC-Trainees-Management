[{"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\index.js":"1","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\reportWebVitals.js":"2","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\App.js":"3","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\plugin\\js\\app.js":"4","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\DefaultLayout.jsx":"5","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Footer.jsx":"6","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Body.jsx":"7","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Header.jsx":"8","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Sidebar.jsx":"9","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\routes.js":"10","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\student.jsx":"11","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\input.jsx":"12","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentService.js":"13","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\api.js":"14","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\universityService.js":"15","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\companyService.js":"16","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\intakeService.js":"17","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentCompanyService.js":"18","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentIntakeService.js":"19","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\reviewImageUpload.js":"20","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\selectBoxTypeStu.jsx":"21","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\selectBoxWorkingStatus.jsx":"22","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\selectBoxUniversity.jsx":"23"},{"size":765,"mtime":1608475667866,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":250,"mtime":1608657723351,"results":"27","hashOfConfig":"25"},{"size":5883,"mtime":1608283205686,"results":"28","hashOfConfig":"25"},{"size":433,"mtime":1608298019161,"results":"29","hashOfConfig":"25"},{"size":483,"mtime":1608282182531,"results":"30","hashOfConfig":"25"},{"size":736,"mtime":1608301251800,"results":"31","hashOfConfig":"25"},{"size":9280,"mtime":1608299566906,"results":"32","hashOfConfig":"25"},{"size":2090,"mtime":1608537416686,"results":"33","hashOfConfig":"25"},{"size":262,"mtime":1608657718163,"results":"34","hashOfConfig":"25"},{"size":28522,"mtime":1608763923048,"results":"35","hashOfConfig":"25"},{"size":4139,"mtime":1608738525165,"results":"36","hashOfConfig":"25"},{"size":2234,"mtime":1608746605839,"results":"37","hashOfConfig":"25"},{"size":1651,"mtime":1608751818960,"results":"38","hashOfConfig":"25"},{"size":291,"mtime":1608746661626,"results":"39","hashOfConfig":"25"},{"size":283,"mtime":1608746745329,"results":"40","hashOfConfig":"25"},{"size":279,"mtime":1608184992000,"results":"41","hashOfConfig":"25"},{"size":264,"mtime":1608656612989,"results":"42","hashOfConfig":"25"},{"size":372,"mtime":1608193908000,"results":"43","hashOfConfig":"25"},{"size":760,"mtime":1608744222251,"results":"44","hashOfConfig":"25"},{"size":1846,"mtime":1608263192000,"results":"45","hashOfConfig":"25"},{"size":1408,"mtime":1608743239744,"results":"46","hashOfConfig":"25"},{"size":1450,"mtime":1608744953798,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1sbefy5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\index.js",[],["99","100"],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\reportWebVitals.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\App.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\plugin\\js\\app.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\DefaultLayout.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Footer.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Body.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Header.jsx",["101","102","103","104","105","106","107","108","109","110","111","112","113"],"import logolight from \"./../plugin/images/logo-light.png\";\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header id=\"page-topbar\">\r\n  <div className=\"navbar-header\">\r\n    <div className=\"d-flex\">\r\n      {/* LOGO */}\r\n      <div className=\"navbar-brand-box\">\r\n        <a href=\"index.html\" className=\"logo logo-light\">\r\n          <span className=\"logo-sm\">\r\n            <img src=\"assets/images/isc_logo_icon.png\" alt=\"ISC Quang Trung\" height={22} />\r\n          </span>\r\n          <span className=\"logo-lg\">\r\n            <img src={logolight} alt=\"ISC Quang Trung\" height={22} />\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-sm px-3 font-size-16 header-item waves-effect\" id=\"vertical-menu-btn\">\r\n        <i className=\"bx bxs-dock-left font-weight-bold\" />\r\n      </button>\r\n      {/* App Search*/}\r\n      <form className=\"app-search d-none d-lg-block\">\r\n        <div className=\"position-relative\">\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Tìm kiếm...\" />\r\n          <span className=\"bx bx-search-alt\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div className=\"d-flex\">\r\n      <div className=\"dropdown d-inline-block d-lg-none ml-2\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" id=\"page-header-search-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <i className=\"mdi mdi-magnify\" />\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\" aria-labelledby=\"page-header-search-dropdown\">\r\n          <form className=\"p-3\">\r\n            <div className=\"form-group m-0\">\r\n              <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search ...\" aria-label=\"Recipient's username\" />\r\n                <div className=\"input-group-append\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\"><i className=\"mdi mdi-magnify\" /></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown d-none d-lg-inline-block ml-1\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <i className=\"bx bx-customize\" />\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n          <div className=\"px-lg-2\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col\">\r\n                <a className=\"dropdown-icon-item\" href=\"#\">\r\n                  <img src=\"assets\\images\\house-icon.png\" alt=\"Trang chủ\" />\r\n                  <span>Trang chủ</span>\r\n                </a>\r\n              </div>\r\n              <div className=\"col\">\r\n                <a className=\"dropdown-icon-item\" href=\"#\">\r\n                  <img src=\"assets\\images\\recruitment-icon.png\" alt=\"Tuyển dụng\" />\r\n                  <span>Tìm ứng viên</span>\r\n                </a>\r\n              </div>\r\n              <div className=\"col\">\r\n                <a className=\"dropdown-icon-item\" href=\"#\">\r\n                  <img src=\"assets\\images\\orders.png\" alt=\"Hỗ trợ\" />\r\n                  <span>Bảng giá</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown d-none d-lg-inline-block ml-1\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" data-toggle=\"fullscreen\">\r\n          <i className=\"bx bx-fullscreen\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"dropdown d-inline-block\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" id=\"page-header-notifications-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <i className=\"bx bx-bell bx-tada\" />\r\n          <span className=\"badge badge-danger badge-pill\">2</span>\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\" aria-labelledby=\"page-header-notifications-dropdown\">\r\n          <div className=\"p-3\">\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col\">\r\n                <h6 className=\"m-0\"> Thông báo </h6>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <a href=\"#\" className=\"small\"> Xem tất cả</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div data-simplebar style={{maxHeight: 230}}>\r\n            <a className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <div className=\"avatar-xs mr-3\">\r\n                  <span className=\"avatar-title bg-primary rounded-circle font-size-16\">\r\n                    <i className=\"bx bx-cart\" />\r\n                  </span>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">Your order is placed</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">If several languages coalesce the grammar</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 3 min ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n            <a  className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <img src=\"assets\\images\\users\\avatar-3.jpg\" className=\"mr-3 rounded-circle avatar-xs\" alt=\"user-pic\" />\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">James Lemire</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">It will seem like simplified English.</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 1 hours ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n            <a  className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <div className=\"avatar-xs mr-3\">\r\n                  <span className=\"avatar-title bg-success rounded-circle font-size-16\">\r\n                    <i className=\"bx bx-badge-check\" />\r\n                  </span>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">Your item is shipped</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">If several languages coalesce the grammar</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 3 min ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n            <a  className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <img src=\"assets\\images\\users\\avatar-4.jpg\" className=\"mr-3 rounded-circle avatar-xs\" alt=\"user-pic\" />\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">Salena Layfield</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">As a skeptical Cambridge friend of mine occidental.</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 1 hours ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div className=\"p-2 border-top\">\r\n            <a className=\"btn btn-sm btn-link font-size-14 btn-block text-center\" href=\"#\">\r\n              <i className=\"mdi mdi-arrow-right-circle mr-1\" /> Xem thêm..\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown d-inline-block\">\r\n        <button type=\"button\" className=\"btn header-item waves-effect\" id=\"page-header-user-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <img className=\"rounded-circle header-profile-user\" src=\"https://ui-avatars.com/api/?background=0D8ABC&color=fff&bold=true&name=Đoàn Quốc Dũng\" alt=\"Đoàn Quốc Dũng\" />\r\n          <span className=\"d-none d-xl-inline-block ml-1\">Đoàn Quốc Dũng</span>\r\n          <i className=\"mdi mdi-chevron-down d-none d-xl-inline-block\" />\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-right\">\r\n          {/* item*/}\r\n          <a className=\"dropdown-item\" href=\"#\"><i className=\"bx bx-user font-size-16 align-middle mr-1\" /> Hồ sơ công ty</a>\r\n          <a className=\"dropdown-item d-block\" href=\"#\"><span className=\"badge badge-success float-right\">5</span><i className=\"bx bx-wrench font-size-16 align-middle mr-1\" /> Cài đặt</a>\r\n          <a className=\"dropdown-item\" href=\"#\"><i className=\"bx bx-lock-open font-size-16 align-middle mr-1\" /> Khóa màn hình</a>\r\n          <div className=\"dropdown-divider\" />\r\n          <a className=\"dropdown-item text-danger\" href=\"#\"><i className=\"bx bx-power-off font-size-16 align-middle mr-1 text-danger\" /> Đăng xuất</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n     );\r\n}\r\n \r\nexport default Header;","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Sidebar.jsx",["114","115","116"],"import { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n       <div className=\"vertical-menu\">\r\n  <div data-simplebar className=\"h-100\">\r\n    <div id=\"sidebar-menu\">\r\n      <ul className=\"metismenu list-unstyled\" id=\"side-menu\">\r\n        <li className=\"menu-title text-center text-white-50\">Trang quản lý</li>\r\n        <li>\r\n          <Link to=\"#\" className=\"waves-effect\">\r\n            <i className=\"bx bxs-dashboard\" />\r\n            <span>Quản lý chung</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#\" className=\"has-arrow waves-effect\">\r\n            <i className=\"bx bx-briefcase\" />\r\n            <span>Quản lý học viên</span>\r\n          </Link>\r\n          <ul className=\"sub-menu\" aria-expanded=\"false\">\r\n            <li><Link to=\"/student\">Học viên</Link></li>\r\n            <li><Link to=\"/university\">Trường</Link></li>\r\n            <li><Link to=\"/company\">Công ty</Link></li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#\" className=\"has-arrow waves-effect\">\r\n            <i className=\"bx bx-user-pin\" />\r\n            <span>Quản lý đào tạo</span>\r\n          </Link>\r\n          <ul className=\"sub-menu\" aria-expanded=\"false\">\r\n            <li><Link to=\"/intake\">Khóa Học</Link></li>\r\n            <li><Link to=\"/major\">Ngành học</Link></li>\r\n            <li><Link to=\"/subject\">Môn học</Link></li>\r\n            <li><Link to=\"/lecturer\">Giảng viên</Link></li>\r\n            <li><Link  to=\"/room\">Phòng học</Link></li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#\" className=\"has-arrow waves-effect\">\r\n            <i className=\"bx bx-info-circle\" />\r\n            <span>Quản lý tài khoản</span>\r\n          </Link>\r\n          <ul className=\"sub-menu\" aria-expanded=\"false\">\r\n            <li><Link to=\"#\">Cập nhật thông tin</Link></li>\r\n            <li><Link to=\"#\">Đổi mật khẩu</Link></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    {/* Sidebar */}\r\n  </div>\r\n</div>\r\n\r\n     );\r\n}\r\n \r\nexport default Sidebar;","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\routes.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\student.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport { DropdownList } from 'react-widgets'\r\nimport Select from 'react-select';\r\nimport Input from \"../../Controls/input\";\r\nimport studentService from \"../../Services/studentService\";\r\nimport univerService from \"../../Services/universityService\";\r\nimport companyService from \"../../Services/companyService\";\r\nimport intakeService from \"../../Services/intakeService\";\r\nimport api from \"../../Services/api\";\r\n\r\n// import MultiSelectCheckboxTypeStu from \"../../Controls/selectBoxTypeStu\";\r\n// import MultiSelectCheckboxWorkingStatus from \"../../Controls/selectBoxWorkingStatus\";\r\n// import MultiSelectCheckboxUniversity from \"../../Controls/selectBoxUniversity\";\r\n\r\n\r\nimport \"./student.css\";\r\nimport \"./reviewImageUpload\";\r\nimport studentCompanyService from \"../../Services/studentCompanyService\";\r\nimport studentIntakeService from \"../../Services/studentIntakeService\";\r\n\r\nconst Student = (props) => {\r\n  //Test\r\n  const test = [{ intakeId: null }];\r\n  const test2 = [];\r\n  // Upload Filet\r\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\r\n  const [currentFile, setCurrentFile] = useState(undefined);\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [fileInfos, setFileInfos] = useState([]);\r\n  const selectFile = (event) => {\r\n    setSelectedFiles(event.target.files);\r\n  };\r\n  // Get One university\r\n  const [oneUniver, setOneUniver] = useState();\r\n  const showOneUniver = (id) => {\r\n    univerService.get(id).then((res) => {\r\n      setOneUniver(res.data);\r\n    });\r\n  };\r\n  // Option For MultiCheckBox Type Student\r\n  const optionsTypeStu = [\r\n    { label: \"Studying\", value: \"Studying\", disabled: false },\r\n    { label: \"Graduate\", value: \"Graduate\", disabled: false },\r\n    { label: \"Reserve\", value: \"Reserve\", disabled: false },\r\n  ];\r\n  const [selectedTypeStu, setSelectedTypeStu] = useState([]);\r\n  // handle onChange event of the dropdown\r\n  const handleChangeTypeStu = (e) => {\r\n    setSelectedTypeStu(Array.isArray(e) ? e.map((x) => x.value) : []);\r\n  };\r\n  // Custom Select OneMultiSelect Type Student\r\n  for (var i = 0; i < optionsTypeStu.length; i++) {\r\n    if (selectedTypeStu.length >= 1) {\r\n      optionsTypeStu[i].disabled = true;\r\n    }\r\n  }\r\n\r\n  // Option For MultiCheckBox University\r\n  const [selectedUniver, setSelectedUniver] = useState([]);\r\n  const [univers, setUniver] = useState([]);\r\n\r\n  // Option For MultiCheckBox Company\r\n  const [selectedCompany, setSelectedCompany] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  // Option For MultiCheckBox Intake\r\n  const [selectedIntake, setSelectedIntake] = useState([]);\r\n  const [intakes, setIntakes] = useState([]);\r\n\r\n  //Option For MultiCheckBox Working Status\r\n  const optionsWorkingStatus = [\r\n    { label: \"Active\", value: \"Active\", disabled: false },\r\n    { label: \"Inactive\", value: \"Inactive\", disabled: false },\r\n  ];\r\n  const [selectedWorkingStatus, setSelectedWorkingStatus] = useState([]);\r\n  // handle onChange event of the dropdown\r\n  const handleChangeWorkingStatus = (e) => {\r\n    setSelectedWorkingStatus(Array.isArray(e) ? e.map((x) => x.value) : []);\r\n  };\r\n  // Custom Select OneMultiSelect Type Student\r\n  for (var i = 0; i < optionsWorkingStatus.length; i++) {\r\n    if (selectedWorkingStatus.length >= 1) {\r\n      optionsWorkingStatus[i].disabled = true;\r\n    }\r\n  }\r\n\r\n  // Student\r\n  const [students, setStudent] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const handleModalClose = () => setModalShow(false);\r\n\r\n  //[] Student Intake ID\r\n  const [studentIntakeId, setStudentIntakeId] = useState([]);\r\n  const [showIntakes, setshowIntakes] = useState([]);\r\n  // Formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      codeStu: \"\",\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      emailStu: \"\",\r\n      gpa: \"\",\r\n      phoneStu: \"\",\r\n      addressStu: \"\",\r\n      createdBy: \"Admin\",\r\n      noteStu: \"\",\r\n      image: \"\",\r\n      typeStudent: \"\",\r\n      workingStatus: \"\",\r\n      companies: \"\",\r\n      university: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      codeStu: Yup.string()\r\n        .required(\"Required\")\r\n        .min(2, \"Up to 255 characters\"),\r\n      lastName: Yup.string()\r\n        .required(\"Required\")\r\n        .min(2, \"Up to 200 characters\"),\r\n      firstName: Yup.string()\r\n        .required(\"Required\")\r\n        .min(2, \"Up to 255 characters\"),\r\n      emailStu: Yup.string().required(\"Required\").min(2, \"Up to 200 characters\"),\r\n      gpa: Yup.string().required(\"Required\"),\r\n      phoneStu: Yup.string().required(\"Required\").min(2, \"Up to 200 characters\"),\r\n      addressStu: Yup.string().required(\"Required\").min(2, \"Up to 255 characters\"),\r\n      createdBy: Yup.string().min(2, \"Up to 200 characters\"),\r\n      noteStu: Yup.string().min(2, \"Up to 2000 characters\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      handleFormSubmit(values);\r\n      console.log(values);\r\n    },\r\n  });\r\n  // console.log(students[students.length - 1].id);\r\n\r\n\r\n\r\n\r\n  // Load Data\r\n  const loadData = () => {\r\n    studentService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setStudent(res.data);\r\n      }\r\n    });\r\n\r\n    //Get all company\r\n    companyService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setCompanies(res.data);\r\n      }\r\n    });\r\n\r\n    //Get all university\r\n    univerService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setUniver(res.data);\r\n      }\r\n    });\r\n    //Get all intake\r\n    intakeService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setIntakes(res.data);\r\n        setshowIntakes(res.data);\r\n      }\r\n    });\r\n    // Get Intake Id by Student Id\r\n\r\n    for (var i = 0; i < students.length; i++) {\r\n      studentIntakeService.get(students[i].id).then((res) => {\r\n        setStudentIntakeId(res.data);\r\n        test.push(res.data);\r\n        // console.log(\"aaa\");\r\n        // console.log(studentIntakeId);\r\n        // studentIntakeId.map((e) => {\r\n        //   console.log(e.id.intakeId);\r\n        //   console.log(e.id.studentId);\r\n        // });\r\n      });\r\n    }\r\n    // showIntakes.map((e) => {\r\n    //   console.log(e.id);\r\n    //   console.log(e.nameIntake);\r\n    // });\r\n  };\r\n\r\n  //Didmount load data major\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  //Update Student State\r\n  const [studentId, setStudentId] = useState(0);\r\n  //Check Form Update And Add Student\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    setStudentId(dataId);\r\n    // setModalShow(true);\r\n    if (dataId > 0) {\r\n      //check form Update Student\r\n      studentService.get(dataId).then((res) => {\r\n        formik.setValues(res.data[0]);\r\n        console.log(res.data[0]);\r\n        setModalShow(true);\r\n      });\r\n    } else {\r\n      //check form Add Student\r\n      // studentService.get;\r\n      formik.resetForm();\r\n      setModalShow(true);\r\n    }\r\n  };\r\n  //Add new Student\r\n  const handleFormSubmit = () => {\r\n    //Check for Adding or upadating\r\n    if (studentId === 0) {\r\n      //File\r\n      // let currentFile = selectedFiles[0];\r\n      // setCurrentFile(currentFile);\r\n\r\n      // studentService.add(data).then((res) => {\r\n      //   formik.setValues(res.data);\r\n      //   loadData();\r\n      //   handleModalClose();\r\n      // });\r\n      studentService\r\n        .add1(\r\n          formik.values.firstName,\r\n          formik.values.lastName,\r\n          formik.values.codeStu,\r\n          formik.values.addressStu,\r\n          formik.values.phoneStu,\r\n          formik.values.emailStu,\r\n          selectedTypeStu[0],\r\n          formik.values.gpa,\r\n          selectedWorkingStatus[0],\r\n          formik.values.noteStu,\r\n          formik.values.image,\r\n          formik.values.createdBy,\r\n          selectedUniver[0].value\r\n        )\r\n        .then((stu) => {\r\n          const companyId = [];\r\n          const intakeId = [];\r\n          //Get [] company Id\r\n          for (var i = 0; i < selectedCompany.length; i++) {\r\n            companyId.push(selectedCompany[i].value);\r\n          }\r\n          //Get [] intake Id\r\n          for (var i = 0; i < selectedIntake.length; i++) {\r\n            intakeId.push(selectedIntake[i].value);\r\n          }\r\n          studentCompanyService\r\n            .add(students[students.length - 1].id + 1, companyId)\r\n            .then((stuCom) => {\r\n              loadData();\r\n            });\r\n\r\n          studentIntakeService\r\n            .add(students[students.length - 1].id + 1, intakeId)\r\n            .then((stuIntake) => {\r\n              loadData();\r\n            });\r\n          formik.setValues(stu.data);\r\n          loadData();\r\n          handleModalClose();\r\n        });\r\n    } else {\r\n      studentService\r\n        .updateImg(\r\n          formik.values.firstName,\r\n          formik.values.lastName,\r\n          formik.values.codeStu,\r\n          formik.values.addressStu,\r\n          formik.values.phoneStu,\r\n          formik.values.emailStu,\r\n          selectedTypeStu[0],\r\n          formik.values.gpa,\r\n          selectedWorkingStatus[0],\r\n          formik.values.noteStu,\r\n          formik.values.image,\r\n          formik.values.createdBy,\r\n          selectedUniver[0].value,\r\n          studentId\r\n        )\r\n        .then((res) => {\r\n          if (res.status === 0) {\r\n            //Show success message\r\n            // toast.info(\"Update Success\");\r\n            loadData();\r\n            handleModalClose();\r\n          } else {\r\n            //Show error\r\n            // toast.error(\"Update Error\");\r\n          }\r\n        });\r\n    }\r\n    loadData();\r\n    handleModalClose();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        {/* <!-- start page title --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"page-title-box d-flex align-items-center justify-content-between\">\r\n              <h4 className=\"mb-0 font-size-18\">Student List</h4>\r\n\r\n              <div className=\"page-title-right\">\r\n                <ol className=\"breadcrumb m-0\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"javascript: void(0);\">ISC Quang Trung</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">\r\n                    Management Students\r\n                  </li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end page title --> */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row mb-2\">\r\n                  <div className=\"col-sm-4\">\r\n                    <div className=\"search-box mr-2 mb-2 d-inline-block\">\r\n                      <div className=\"position-relative\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Tìm kiếm...\"\r\n                        />\r\n                        <i className=\"bx bx-search-alt search-icon\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-8\">\r\n                    <div className=\"text-sm-right\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        onClick={() => handleModalShow(null, 0)}\r\n                      >\r\n                        <i className=\"fas fa-plus\"></i> Add\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-centered table-nowrap\">\r\n                    <thead className=\"thead-light\">\r\n                      <tr>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {/* <div class=\"custom-control custom-checkbox\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    class=\"custom-control-input\"\r\n                                    id=\"customCheck1\"\r\n                                  />\r\n                                  <label\r\n                                    class=\"custom-control-label\"\r\n                                    for=\"customCheck1\"\r\n                                  >\r\n                                    &nbsp;\r\n                                  </label>\r\n                                </div> */}\r\n                          No.\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Student Code\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Full name\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Avatar\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Phone\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Email\r\n                        </th>\r\n                        <th\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          Status\r\n                        </th>\r\n                        {/* <th>Intake</th> */}\r\n                        <th>University</th>\r\n                        {/* <th>Company</th> */}\r\n                        <th>Edit</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {students.map((student, idx) => {\r\n                        return (\r\n                          <tr key={student.id}>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {idx + 1}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {student.codeStu}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {student.firstName + \" \" + student.lastName}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              <img\r\n                                style={{\r\n                                  width: \"100px\",\r\n                                  height: \"100px\",\r\n                                }}\r\n                                src={api.url.image + student.image}\r\n                                alt={\"Hinh \" + student.lastName}\r\n                              />\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {student.phoneStu}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {student.emailStu}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              <span className=\"badge badge-pill badge-soft-success font-size-12\">\r\n                                {student.typeStu}\r\n                              </span>\r\n                            </td>\r\n                            {/* <td>\r\n                                  {test.map((e) => {\r\n                                    return <p>{e.intakeId}</p>;\r\n                                  })}\r\n                                </td> */}\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {student.university.nameUni}\r\n                            </td>\r\n                            {/* <td></td> */}\r\n                            <td\r\n                              style={{\r\n                                verticalAlign: \"middle\",\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              <a\r\n                                href=\"#\"\r\n                                onClick={(e) => handleModalShow(e, student.id)}\r\n                              >\r\n                                <i className=\"fas fa-edit text-primary mr-3\"></i>\r\n                              </a>\r\n                              <a\r\n                                href=\"#\"\r\n                                // onClick={(e) => deleteRow(e, major.id)}\r\n                              >\r\n                                <i className=\"fas fa-trash-alt text-danger\"></i>\r\n                              </a>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Modal  */}\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Student</Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit} enctype=\"multipart/form-data\">\r\n          <Modal.Body>\r\n            <div className=\"row px-3\">         \r\n              <div className=\"col-sm-12 col-lg-2\">\r\n                <div className=\"avatar-upload-jsk py-2\">\r\n                  <div className=\"avatar-edit\">\r\n                    <input type=\"file\" name=\"avatar\" id=\"imageUpload\" accept=\".png, .jpg, .jpeg\" />\r\n                  </div>\r\n                  <div className=\"avatar-preview-jsk\">\r\n                    <label htmlFor=\"imageUpload\" className=\"imageUpload\"> <i className=\"bx bxs-cloud-upload\" /></label>\r\n                    <div id=\"imagePreview\" style={{backgroundImage: 'url(\"assets/images/avata-playhoder.jpg\")'}} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-12 col-lg-10\">\r\n                <div className=\"row\">\r\n\r\n            {/* <Multi Select Checkbox Intake /> */}\r\n              <div className=\"col-6\">\r\n              <div class=\"form-group\">\r\n                <label htmlFor=\"multicheckIntake\"> Khóa học </label>\r\n                  <MultiSelect\r\n                    id=\"multicheckIntake\"\r\n                    options={intakes.map((e) => ({\r\n                      label: e.nameIntake,\r\n                      value: e.id,\r\n                      // disabled: selectedIntake.length >= 1 ? true : false,\r\n                    }))}\r\n                    value={selectedIntake}\r\n                    onChange={setSelectedIntake}\r\n                    labelledBy={\"Select Company\"}\r\n                    hasSelectAll={false}\r\n                    shouldToggleOnHover={true}\r\n                  />\r\n              </div>\r\n            </div>\r\n            \r\n            <Input\r\n                id=\"image1\"\r\n                type=\"file\"\r\n                rows=\"1\"\r\n                frmField={formik.getFieldProps(\"image\")}\r\n                err={formik.touched.image && formik.errors.image}\r\n                errMessage={formik.errors.image}\r\n                value={formik.values.image}\r\n                onChange={formik.handleChange}\r\n              />\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"codeStu\"\r\n              name=\"codeStu\"\r\n              type=\"text\"\r\n              label=\"Mã sinh viên\"\r\n              frmField={formik.getFieldProps(\"codeStu\")}\r\n              err={formik.touched.codeStu && formik.errors.codeStu}\r\n              errMessage={formik.errors.codeStu}\r\n              value={formik.values.codeStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n            \r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuFirstName\"\r\n              type=\"text\"\r\n              label=\"Họ và tên lót\"\r\n              frmField={formik.getFieldProps(\"firstName\")}\r\n              err={formik.touched.firstName && formik.errors.firstName}\r\n              errMessage={formik.errors.firstName}\r\n              value={formik.values.firstName}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuLastName\"\r\n              type=\"text\"\r\n              label=\"Tên\"\r\n              frmField={formik.getFieldProps(\"lastName\")}\r\n              err={formik.touched.lastName && formik.errors.lastName}\r\n              errMessage={formik.errors.lastName}\r\n              value={formik.values.lastName}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuEmail\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              frmField={formik.getFieldProps(\"emailStu\")}\r\n              err={formik.touched.emailStu && formik.errors.emailStu}\r\n              errMessage={formik.errors.emailStu}\r\n              value={formik.values.emailStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuPhone\"\r\n              type=\"text\"\r\n              label=\"Số điện thoại\"\r\n              frmField={formik.getFieldProps(\"phoneStu\")}\r\n              err={formik.touched.phoneStu && formik.errors.phoneStu}\r\n              errMessage={formik.errors.phoneStu}\r\n              value={formik.values.phoneStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuAddress\"\r\n              type=\"text\"\r\n              label=\"Địa chỉ\"\r\n              frmField={formik.getFieldProps(\"addressStu\")}\r\n              err={formik.touched.addressStu && formik.errors.addressStu}\r\n              errMessage={formik.errors.addressStu}\r\n              value={formik.values.addressStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n            {/* <Multi Select Checkbox TypeStu /> */}\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"multicheckUniver\">Trạng thái</label>\r\n                  <MultiSelect\r\n                    id=\"multicheckTypeStu\"\r\n                    options={optionsTypeStu}\r\n                    value={optionsTypeStu.filter((obj) =>\r\n                      selectedTypeStu.includes(obj.value)\r\n                    )} // set selected values\r\n                    onChange={handleChangeTypeStu}\r\n                    labelledBy={\"Select Type Student\"}\r\n                    hasSelectAll={false}\r\n                    shouldToggleOnHover={true}\r\n                    // {...formik.getFieldProps(\"typeStudent\")}\r\n                  />\r\n                </div>\r\n            </div>\r\n            {/* <Multi Select Checkbox TypeStu /> */}\r\n\r\n\r\n            {/* <Multi Select Checkbox University /> */}\r\n            <div className=\"col-sm-6\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"multicheckUniver\">Trường</label>\r\n                  <MultiSelect\r\n                    id=\"multicheckUniver\"\r\n                    options={univers.map((e) => ({\r\n                      label: e.nameUni,\r\n                      value: e.id,\r\n                      disabled: selectedUniver.length >= 1 ? true : false,\r\n                    }))}\r\n                    value={selectedUniver}\r\n                    onChange={setSelectedUniver}\r\n                    labelledBy={\"Select University\"}\r\n                    hasSelectAll={false}\r\n                    shouldToggleOnHover={true}\r\n                    // {...formik.getFieldProps(\"university\")}\r\n                  />\r\n              </div>\r\n            </div>\r\n            {/* <Multi Select Checkbox University /> */}\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuGPA\"\r\n              type=\"number\"\r\n              label=\"Điển trung bình\"\r\n              frmField={formik.getFieldProps(\"gpa\")}\r\n              err={formik.touched.gpa && formik.errors.gpa}\r\n              errMessage={formik.errors.gpa}\r\n              value={formik.values.gpa}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"12\"\r\n              rows=\"2\"\r\n              id=\"txtStuNote\"\r\n              type=\"text\"\r\n              label=\"Note:\"\r\n              frmField={formik.getFieldProps(\"noteStu\")}\r\n              err={formik.touched.note && formik.errors.note}\r\n              errMessage={formik.errors.note}\r\n              value={formik.values.note}\r\n              onChange={formik.handleChange}\r\n            />\r\n              \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\input.jsx",["145","146","147","148","149"],"import React, { Component, Fragment} from \"react\";\r\n\r\nclass CustomInput extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      typeInput, //1: Vertical(Dọc), 2: Horizontal(Ngan)\r\n      onChange,\r\n      value,\r\n      type,\r\n      id,\r\n      label,\r\n      placeHolder,\r\n      labelSize,\r\n      column, // Thêm cột Column BootStrap VD: column=\"6\"->col-sm-6\r\n      inputRef,\r\n      frmField,\r\n      err,\r\n      errMessage,\r\n      ...others\r\n    } = this.props;\r\n\r\n    const typeinput = typeInput ? typeInput : \"1\";\r\n    const size = labelSize ? labelSize : 3;\r\n    const classLeft = `col-sm-${size} col-form-label text-center`;\r\n    const ColumnClass = `col-sm-${column}`;\r\n    const classRight = `col-sm-${12 - size}`;\r\n    const inputClass = `form-control  ${err ? \"is-invalid\" : \"\"}`;\r\n\r\n    return (\r\n      <Fragment>\r\n            {(() => {\r\n                switch(typeinput) {\r\n                  case \"1\":\r\n                    return(\r\n                      <div className={ColumnClass}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"formrow-email-input\">{label}</label>\r\n                          {others[\"rows\"] == 1 ? (\r\n                            <input\r\n                              onChange={onChange}\r\n                              value={value}\r\n                              ref={inputRef}\r\n                              type={type}\r\n                              className={inputClass}\r\n                              id={id}\r\n                              placeholder={placeHolder}\r\n                              {...frmField}\r\n                              {...others}\r\n                            />\r\n                          ) : (\r\n                            <textarea\r\n                              ref={inputRef}\r\n                              className={inputClass}\r\n                              id={id}\r\n                              type={type}\r\n                              placeholder={placeHolder}\r\n                              {...frmField}\r\n                              {...others}\r\n                            ></textarea>\r\n                          )}\r\n                          {err ? <div className=\"invalid-feedback\">{errMessage}</div> : null}\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  break;\r\n\r\n                  case \"2\":\r\n                    return(\r\n                      <div className={ColumnClass}>\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor={id} className={classLeft}>\r\n                            {label}\r\n                          </label>\r\n                          <div className={classRight}>\r\n                            {others[\"rows\"] == 1 ? (\r\n                              <input\r\n                                onChange={onChange}\r\n                                value={value}\r\n                                ref={inputRef}\r\n                                type={type}\r\n                                className={inputClass}\r\n                                id={id}\r\n                                placeholder={placeHolder}\r\n                                {...frmField}\r\n                                {...others}\r\n                              />\r\n                            ) : (\r\n                              <textarea\r\n                                ref={inputRef}\r\n                                className={inputClass}\r\n                                id={id}\r\n                                type={type}\r\n                                placeholder={placeHolder}\r\n                                {...frmField}\r\n                                {...others}\r\n                              ></textarea>\r\n                            )}\r\n                            {err ? <div className=\"invalid-feedback\">{errMessage}</div> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  break;\r\n                }\r\n            })()}\r\n        </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default CustomInput;\r\n","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\api.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\universityService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\companyService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\intakeService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentCompanyService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentIntakeService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\reviewImageUpload.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\selectBoxTypeStu.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\selectBoxWorkingStatus.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\selectBoxUniversity.jsx",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":56,"column":17,"nodeType":"157","endLine":56,"endColumn":60},{"ruleId":"155","severity":1,"message":"156","line":62,"column":17,"nodeType":"157","endLine":62,"endColumn":60},{"ruleId":"155","severity":1,"message":"156","line":68,"column":17,"nodeType":"157","endLine":68,"endColumn":60},{"ruleId":"155","severity":1,"message":"156","line":94,"column":17,"nodeType":"157","endLine":94,"endColumn":47},{"ruleId":"155","severity":1,"message":"158","line":99,"column":13,"nodeType":"157","endLine":99,"endColumn":57},{"ruleId":"155","severity":1,"message":"158","line":115,"column":13,"nodeType":"157","endLine":115,"endColumn":58},{"ruleId":"155","severity":1,"message":"158","line":127,"column":13,"nodeType":"157","endLine":127,"endColumn":58},{"ruleId":"155","severity":1,"message":"158","line":143,"column":13,"nodeType":"157","endLine":143,"endColumn":58},{"ruleId":"155","severity":1,"message":"156","line":157,"column":13,"nodeType":"157","endLine":157,"endColumn":92},{"ruleId":"155","severity":1,"message":"156","line":171,"column":11,"nodeType":"157","endLine":171,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":172,"column":11,"nodeType":"157","endLine":172,"endColumn":57},{"ruleId":"155","severity":1,"message":"156","line":173,"column":11,"nodeType":"157","endLine":173,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":175,"column":11,"nodeType":"157","endLine":175,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":21,"column":11,"nodeType":"157","endLine":21,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":32,"column":11,"nodeType":"157","endLine":32,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":45,"column":11,"nodeType":"157","endLine":45,"endColumn":58},{"ruleId":"161","severity":1,"message":"162","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"165","line":8,"column":10,"nodeType":"163","messageId":"164","endLine":8,"endColumn":22},{"ruleId":"161","severity":1,"message":"166","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":14},{"ruleId":"161","severity":1,"message":"167","line":30,"column":9,"nodeType":"163","messageId":"164","endLine":30,"endColumn":14},{"ruleId":"161","severity":1,"message":"168","line":32,"column":10,"nodeType":"163","messageId":"164","endLine":32,"endColumn":23},{"ruleId":"161","severity":1,"message":"169","line":33,"column":10,"nodeType":"163","messageId":"164","endLine":33,"endColumn":21},{"ruleId":"161","severity":1,"message":"170","line":33,"column":23,"nodeType":"163","messageId":"164","endLine":33,"endColumn":37},{"ruleId":"161","severity":1,"message":"171","line":34,"column":10,"nodeType":"163","messageId":"164","endLine":34,"endColumn":18},{"ruleId":"161","severity":1,"message":"172","line":34,"column":20,"nodeType":"163","messageId":"164","endLine":34,"endColumn":31},{"ruleId":"161","severity":1,"message":"173","line":35,"column":10,"nodeType":"163","messageId":"164","endLine":35,"endColumn":17},{"ruleId":"161","severity":1,"message":"174","line":35,"column":19,"nodeType":"163","messageId":"164","endLine":35,"endColumn":29},{"ruleId":"161","severity":1,"message":"175","line":36,"column":10,"nodeType":"163","messageId":"164","endLine":36,"endColumn":19},{"ruleId":"161","severity":1,"message":"176","line":36,"column":21,"nodeType":"163","messageId":"164","endLine":36,"endColumn":33},{"ruleId":"161","severity":1,"message":"177","line":37,"column":9,"nodeType":"163","messageId":"164","endLine":37,"endColumn":19},{"ruleId":"161","severity":1,"message":"178","line":41,"column":10,"nodeType":"163","messageId":"164","endLine":41,"endColumn":19},{"ruleId":"161","severity":1,"message":"179","line":42,"column":9,"nodeType":"163","messageId":"164","endLine":42,"endColumn":22},{"ruleId":"161","severity":1,"message":"180","line":70,"column":27,"nodeType":"163","messageId":"164","endLine":70,"endColumn":45},{"ruleId":"161","severity":1,"message":"181","line":71,"column":10,"nodeType":"163","messageId":"164","endLine":71,"endColumn":19},{"ruleId":"161","severity":1,"message":"182","line":84,"column":9,"nodeType":"163","messageId":"164","endLine":84,"endColumn":34},{"ruleId":"183","severity":1,"message":"184","line":88,"column":12,"nodeType":"163","messageId":"185","endLine":88,"endColumn":13},{"ruleId":"161","severity":1,"message":"186","line":100,"column":10,"nodeType":"163","messageId":"164","endLine":100,"endColumn":25},{"ruleId":"161","severity":1,"message":"187","line":101,"column":10,"nodeType":"163","messageId":"164","endLine":101,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":198,"column":6,"nodeType":"190","endLine":198,"endColumn":8,"suggestions":"191"},{"ruleId":"183","severity":1,"message":"184","line":258,"column":20,"nodeType":"163","messageId":"185","endLine":258,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":322,"column":21,"nodeType":"157","endLine":322,"endColumn":52},{"ruleId":"192","severity":1,"message":"193","line":322,"column":29,"nodeType":"194","messageId":"195","endLine":322,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":533,"column":31,"nodeType":"157","endLine":536,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":539,"column":31,"nodeType":"157","endLine":542,"endColumn":32},{"ruleId":"196","severity":1,"message":"197","line":33,"column":17,"nodeType":"198","messageId":"199","endLine":105,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":39,"column":43,"nodeType":"202","messageId":"203","endLine":39,"endColumn":45},{"ruleId":"204","severity":1,"message":"205","line":66,"column":19,"nodeType":"206","messageId":"207","endLine":66,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":76,"column":45,"nodeType":"202","messageId":"203","endLine":76,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":104,"column":19,"nodeType":"206","messageId":"207","endLine":104,"endColumn":25},{"ruleId":"161","severity":1,"message":"208","line":6,"column":9,"nodeType":"163","messageId":"164","endLine":6,"endColumn":16},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'DropdownList' is defined but never used.","'Select' is defined but never used.","'test2' is assigned a value but never used.","'selectedFiles' is assigned a value but never used.","'currentFile' is assigned a value but never used.","'setCurrentFile' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'fileInfos' is assigned a value but never used.","'setFileInfos' is assigned a value but never used.","'selectFile' is assigned a value but never used.","'oneUniver' is assigned a value but never used.","'showOneUniver' is assigned a value but never used.","'setSelectedCompany' is assigned a value but never used.","'companies' is assigned a value but never used.","'handleChangeWorkingStatus' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'studentIntakeId' is assigned a value but never used.","'showIntakes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["211"],"no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'options' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},"Update the dependencies array to be: [loadData]",{"range":"214","text":"215"},[6579,6581],"[loadData]"]