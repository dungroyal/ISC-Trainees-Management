[{"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\index.js":"1","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\App.js":"2","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\reportWebVitals.js":"3","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\plugin\\js\\app.js":"4","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\DefaultLayout.jsx":"5","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Footer.jsx":"6","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Body.jsx":"7","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Header.jsx":"8","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Sidebar.jsx":"9","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\routes.js":"10","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\student.jsx":"11","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentService.js":"12","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\intakeService.js":"13","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\universityService.js":"14","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\companyService.js":"15","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\api.js":"16","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentIntakeService.js":"17","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentCompanyService.js":"18","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\input.jsx":"19","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\paginationStudent.jsx":"20","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\searchStudent.jsx":"21"},{"size":767,"mtime":1608830135984,"results":"22","hashOfConfig":"23"},{"size":250,"mtime":1608657723351,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":5883,"mtime":1608283205686,"results":"26","hashOfConfig":"23"},{"size":441,"mtime":1608795764065,"results":"27","hashOfConfig":"23"},{"size":483,"mtime":1608282182531,"results":"28","hashOfConfig":"23"},{"size":736,"mtime":1608301251800,"results":"29","hashOfConfig":"23"},{"size":9280,"mtime":1608299566906,"results":"30","hashOfConfig":"23"},{"size":2090,"mtime":1608537416686,"results":"31","hashOfConfig":"23"},{"size":262,"mtime":1608657718163,"results":"32","hashOfConfig":"23"},{"size":35053,"mtime":1609355146147,"results":"33","hashOfConfig":"23"},{"size":3612,"mtime":1609067926719,"results":"34","hashOfConfig":"23"},{"size":279,"mtime":1608184992000,"results":"35","hashOfConfig":"23"},{"size":291,"mtime":1608746661626,"results":"36","hashOfConfig":"23"},{"size":283,"mtime":1608746745329,"results":"37","hashOfConfig":"23"},{"size":2576,"mtime":1609145779177,"results":"38","hashOfConfig":"23"},{"size":863,"mtime":1609145802776,"results":"39","hashOfConfig":"23"},{"size":264,"mtime":1608656612989,"results":"40","hashOfConfig":"23"},{"size":4139,"mtime":1608738525165,"results":"41","hashOfConfig":"23"},{"size":1928,"mtime":1609069755537,"results":"42","hashOfConfig":"23"},{"size":1024,"mtime":1609067964187,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1sbefy5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\index.js",[],["93","94"],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\App.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\reportWebVitals.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\plugin\\js\\app.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\DefaultLayout.jsx",["95"],"import { Fragment } from \"react\";\r\nimport Footer from \"../Containers/Footer\";\r\nimport Header from \"../Containers/Header\";\r\nimport Sidebar from \"../Containers/Sidebar\";\r\nimport Body from \"../Containers/Body\";\r\n\r\nconst DefaultLayout = () => {\r\n    return ( \r\n        <Fragment>\r\n            <Header/>\r\n            <Sidebar/>\r\n            <Body/>\r\n            {/* <Footer/> */}\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default DefaultLayout;","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Footer.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Body.jsx",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Header.jsx",["96","97","98","99","100","101","102","103","104","105","106","107","108"],"import logolight from \"./../plugin/images/logo-light.png\";\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header id=\"page-topbar\">\r\n  <div className=\"navbar-header\">\r\n    <div className=\"d-flex\">\r\n      {/* LOGO */}\r\n      <div className=\"navbar-brand-box\">\r\n        <a href=\"index.html\" className=\"logo logo-light\">\r\n          <span className=\"logo-sm\">\r\n            <img src=\"assets/images/isc_logo_icon.png\" alt=\"ISC Quang Trung\" height={22} />\r\n          </span>\r\n          <span className=\"logo-lg\">\r\n            <img src={logolight} alt=\"ISC Quang Trung\" height={22} />\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-sm px-3 font-size-16 header-item waves-effect\" id=\"vertical-menu-btn\">\r\n        <i className=\"bx bxs-dock-left font-weight-bold\" />\r\n      </button>\r\n      {/* App Search*/}\r\n      <form className=\"app-search d-none d-lg-block\">\r\n        <div className=\"position-relative\">\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Tìm kiếm...\" />\r\n          <span className=\"bx bx-search-alt\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div className=\"d-flex\">\r\n      <div className=\"dropdown d-inline-block d-lg-none ml-2\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" id=\"page-header-search-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <i className=\"mdi mdi-magnify\" />\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\" aria-labelledby=\"page-header-search-dropdown\">\r\n          <form className=\"p-3\">\r\n            <div className=\"form-group m-0\">\r\n              <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search ...\" aria-label=\"Recipient's username\" />\r\n                <div className=\"input-group-append\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\"><i className=\"mdi mdi-magnify\" /></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown d-none d-lg-inline-block ml-1\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <i className=\"bx bx-customize\" />\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n          <div className=\"px-lg-2\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col\">\r\n                <a className=\"dropdown-icon-item\" href=\"#\">\r\n                  <img src=\"assets\\images\\house-icon.png\" alt=\"Trang chủ\" />\r\n                  <span>Trang chủ</span>\r\n                </a>\r\n              </div>\r\n              <div className=\"col\">\r\n                <a className=\"dropdown-icon-item\" href=\"#\">\r\n                  <img src=\"assets\\images\\recruitment-icon.png\" alt=\"Tuyển dụng\" />\r\n                  <span>Tìm ứng viên</span>\r\n                </a>\r\n              </div>\r\n              <div className=\"col\">\r\n                <a className=\"dropdown-icon-item\" href=\"#\">\r\n                  <img src=\"assets\\images\\orders.png\" alt=\"Hỗ trợ\" />\r\n                  <span>Bảng giá</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown d-none d-lg-inline-block ml-1\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" data-toggle=\"fullscreen\">\r\n          <i className=\"bx bx-fullscreen\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"dropdown d-inline-block\">\r\n        <button type=\"button\" className=\"btn header-item noti-icon waves-effect\" id=\"page-header-notifications-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <i className=\"bx bx-bell bx-tada\" />\r\n          <span className=\"badge badge-danger badge-pill\">2</span>\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\" aria-labelledby=\"page-header-notifications-dropdown\">\r\n          <div className=\"p-3\">\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col\">\r\n                <h6 className=\"m-0\"> Thông báo </h6>\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <a href=\"#\" className=\"small\"> Xem tất cả</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div data-simplebar style={{maxHeight: 230}}>\r\n            <a className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <div className=\"avatar-xs mr-3\">\r\n                  <span className=\"avatar-title bg-primary rounded-circle font-size-16\">\r\n                    <i className=\"bx bx-cart\" />\r\n                  </span>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">Your order is placed</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">If several languages coalesce the grammar</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 3 min ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n            <a  className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <img src=\"assets\\images\\users\\avatar-3.jpg\" className=\"mr-3 rounded-circle avatar-xs\" alt=\"user-pic\" />\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">James Lemire</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">It will seem like simplified English.</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 1 hours ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n            <a  className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <div className=\"avatar-xs mr-3\">\r\n                  <span className=\"avatar-title bg-success rounded-circle font-size-16\">\r\n                    <i className=\"bx bx-badge-check\" />\r\n                  </span>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">Your item is shipped</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">If several languages coalesce the grammar</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 3 min ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n            <a  className=\"text-reset notification-item\">\r\n              <div className=\"media\">\r\n                <img src=\"assets\\images\\users\\avatar-4.jpg\" className=\"mr-3 rounded-circle avatar-xs\" alt=\"user-pic\" />\r\n                <div className=\"media-body\">\r\n                  <h6 className=\"mt-0 mb-1\">Salena Layfield</h6>\r\n                  <div className=\"font-size-12 text-muted\">\r\n                    <p className=\"mb-1\">As a skeptical Cambridge friend of mine occidental.</p>\r\n                    <p className=\"mb-0\"><i className=\"mdi mdi-clock-outline\" /> 1 hours ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n          <div className=\"p-2 border-top\">\r\n            <a className=\"btn btn-sm btn-link font-size-14 btn-block text-center\" href=\"#\">\r\n              <i className=\"mdi mdi-arrow-right-circle mr-1\" /> Xem thêm..\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown d-inline-block\">\r\n        <button type=\"button\" className=\"btn header-item waves-effect\" id=\"page-header-user-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <img className=\"rounded-circle header-profile-user\" src=\"https://ui-avatars.com/api/?background=0D8ABC&color=fff&bold=true&name=Đoàn Quốc Dũng\" alt=\"Đoàn Quốc Dũng\" />\r\n          <span className=\"d-none d-xl-inline-block ml-1\">Đoàn Quốc Dũng</span>\r\n          <i className=\"mdi mdi-chevron-down d-none d-xl-inline-block\" />\r\n        </button>\r\n        <div className=\"dropdown-menu dropdown-menu-right\">\r\n          {/* item*/}\r\n          <a className=\"dropdown-item\" href=\"#\"><i className=\"bx bx-user font-size-16 align-middle mr-1\" /> Hồ sơ công ty</a>\r\n          <a className=\"dropdown-item d-block\" href=\"#\"><span className=\"badge badge-success float-right\">5</span><i className=\"bx bx-wrench font-size-16 align-middle mr-1\" /> Cài đặt</a>\r\n          <a className=\"dropdown-item\" href=\"#\"><i className=\"bx bx-lock-open font-size-16 align-middle mr-1\" /> Khóa màn hình</a>\r\n          <div className=\"dropdown-divider\" />\r\n          <a className=\"dropdown-item text-danger\" href=\"#\"><i className=\"bx bx-power-off font-size-16 align-middle mr-1 text-danger\" /> Đăng xuất</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n     );\r\n}\r\n \r\nexport default Header;","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Containers\\Sidebar.jsx",["109","110","111"],"import { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return ( \r\n       <div className=\"vertical-menu\">\r\n  <div data-simplebar className=\"h-100\">\r\n    <div id=\"sidebar-menu\">\r\n      <ul className=\"metismenu list-unstyled\" id=\"side-menu\">\r\n        <li className=\"menu-title text-center text-white-50\">Trang quản lý</li>\r\n        <li>\r\n          <Link to=\"#\" className=\"waves-effect\">\r\n            <i className=\"bx bxs-dashboard\" />\r\n            <span>Quản lý chung</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#\" className=\"has-arrow waves-effect\">\r\n            <i className=\"bx bx-briefcase\" />\r\n            <span>Quản lý học viên</span>\r\n          </Link>\r\n          <ul className=\"sub-menu\" aria-expanded=\"false\">\r\n            <li><Link to=\"/student\">Học viên</Link></li>\r\n            <li><Link to=\"/university\">Trường</Link></li>\r\n            <li><Link to=\"/company\">Công ty</Link></li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#\" className=\"has-arrow waves-effect\">\r\n            <i className=\"bx bx-user-pin\" />\r\n            <span>Quản lý đào tạo</span>\r\n          </Link>\r\n          <ul className=\"sub-menu\" aria-expanded=\"false\">\r\n            <li><Link to=\"/intake\">Khóa Học</Link></li>\r\n            <li><Link to=\"/major\">Ngành học</Link></li>\r\n            <li><Link to=\"/subject\">Môn học</Link></li>\r\n            <li><Link to=\"/lecturer\">Giảng viên</Link></li>\r\n            <li><Link  to=\"/room\">Phòng học</Link></li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#\" className=\"has-arrow waves-effect\">\r\n            <i className=\"bx bx-info-circle\" />\r\n            <span>Quản lý tài khoản</span>\r\n          </Link>\r\n          <ul className=\"sub-menu\" aria-expanded=\"false\">\r\n            <li><Link to=\"#\">Cập nhật thông tin</Link></li>\r\n            <li><Link to=\"#\">Đổi mật khẩu</Link></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    {/* Sidebar */}\r\n  </div>\r\n</div>\r\n\r\n     );\r\n}\r\n \r\nexport default Sidebar;","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\routes.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\student.jsx",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport $, { map } from 'jquery';\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport queryString from 'query-string';\r\nimport Select from 'react-select';\r\nimport Input from \"../../Controls/input\";\r\nimport studentService from \"../../Services/studentService\";\r\nimport univerService from \"../../Services/universityService\";\r\nimport companyService from \"../../Services/companyService\";\r\nimport intakeService from \"../../Services/intakeService\";\r\nimport api from \"../../Services/api\";\r\n\r\nimport \"./student.css\";\r\nimport studentCompanyService from \"../../Services/studentCompanyService\";\r\nimport studentIntakeService from \"../../Services/studentIntakeService\";\r\n\r\n\r\n// Importing toastify module \r\nimport {toast} from 'react-toastify';  \r\n// Import toastify css file \r\nimport 'react-toastify/dist/ReactToastify.css';  \r\nimport Pagination from './paginationStudent';\r\nimport SearchStudent from './searchStudent';\r\ntoast.configure()\r\n\r\nconst Student = (props) => {\r\n  //Test\r\n  const test = [];\r\n  const test2 = [];\r\n  // Upload Filet\r\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\r\n  const [currentFile, setCurrentFile] = useState(undefined);\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [fileInfos, setFileInfos] = useState([]);\r\n  const selectFile = (event) => {\r\n    setSelectedFiles(event.target.files);\r\n  };\r\n  // Get One university\r\n  const [oneUniver, setOneUniver] = useState();\r\n  const showOneUniver = (id) => {\r\n    univerService.get(id).then((res) => {\r\n      setOneUniver(res.data);\r\n    });\r\n  };\r\n  // Option For MultiCheckBox Type Student\r\n  const optionsTypeStu = [\r\n    { label: \"Studying\", value: \"Studying\" },\r\n    { label: \"Graduate\", value: \"Graduate\" },\r\n    { label: \"Reserve\", value: \"Reserve\" },\r\n  ];\r\n  const [selectedTypeStu, setSelectedTypeStu] = useState({ label: \"Studying\", value: \"Studying\"});\r\n\r\n  // Custom Select OneMultiSelect Type Student\r\n  for (var i = 0; i < optionsTypeStu.length; i++) {\r\n    if (selectedTypeStu.length >= 1) {\r\n      optionsTypeStu[i].disabled = true;\r\n    }\r\n  }\r\n\r\n  // Option For MultiCheckBox University\r\n  const [selectedUniver, setSelectedUniver] = useState();\r\n  const [univers, setUniver] = useState([]);\r\n\r\n  // Option For MultiCheckBox Company\r\n  const [selectedCompany, setSelectedCompany] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n\r\n  // Option For MultiCheckBox Intake\r\n  const [selectedIntake, setSelectedIntake] = useState([]);\r\n  const [intakes, setIntakes] = useState([]);\r\n\r\n  //Option For MultiCheckBox Working Status\r\n  const optionsWorkingStatus = [\r\n    { label: \"Active\", value: \"Active\"},\r\n    { label: \"Inactive\", value: \"Inactive\"},\r\n  ];\r\n  const [selectedWorkingStatus, setSelectedWorkingStatus] = useState({ label: \"Inactive\", value: \"Inactive\"});\r\n\r\n  // Custom Select OneMultiSelect Type Student\r\n  for (var i = 0; i < optionsWorkingStatus.length; i++) {\r\n    if (selectedWorkingStatus.length >= 1) {\r\n      optionsWorkingStatus[i].disabled = true;\r\n    }\r\n  }\r\n\r\n  \r\n  //[] Student Intake ID\r\n  const [allStudentIntake, setAllStudentIntake] = useState([]);\r\n  const [studentIntakeId, setStudentIntakeId] = useState([]);\r\n  const [showIntakes, setshowIntakes] = useState([]);\r\n\r\n  const [modalUpdate, setModalUpdate] = useState(false);\r\n  \r\n  // Formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      codeStu: \"\",\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      emailStu: \"\",\r\n      gpa: \"\",\r\n      phoneStu: \"\",\r\n      addressStu: \"\",\r\n      createdBy: \"Admin\",\r\n      updatedBy:\"Admin\",\r\n      noteStu: \"\",\r\n      image: \"\",\r\n      typeStudent: { label: \"Studying\", value: \"Studying\" },\r\n      workingStatus: { label: \"Inactive\", value: \"Inactive\"},\r\n      companies: \"\",\r\n      university: \"\",\r\n      intake: \"\",\r\n      image: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      codeStu: Yup.string()\r\n        .required(\"Required\")\r\n        .min(2, \"Up to 255 characters\"),\r\n      lastName: Yup.string()\r\n        .required(\"Required\")\r\n        .min(2, \"Up to 200 characters\"),\r\n      firstName: Yup.string()\r\n        .required(\"Required\")\r\n        .min(2, \"Up to 255 characters\"),\r\n      emailStu: Yup.string().email().required(\"Required\").min(2, \"Up to 200 characters\"),\r\n      gpa: Yup.string().required(\"Required\"),\r\n      phoneStu: Yup.string().required(\"Required\").min(2, \"Up to 200 characters\"),\r\n      addressStu: Yup.string().required(\"Required\").min(2, \"Up to 255 characters\"),\r\n      noteStu: Yup.string().min(2, \"Up to 2000 characters\"),\r\n      intake: Yup.object().required(\"Required\"),\r\n      university: Yup.object().required(\"Required\"),\r\n      image: Yup.mixed()\r\n      .required(\"required\")\r\n      .test(\r\n        \"fileSize\",\r\n        \"too large (<2Mb)\",\r\n        value => value && value.size <= 2000000 //2MB\r\n      )\r\n      .test(\r\n        \"fileFormat\",\r\n        \"unsupported Format\",\r\n        value => value && [\r\n          \"image/jpg\",\r\n          \"image/jpeg\",\r\n          \"image/gif\",\r\n          \"image/png\"\r\n        ].includes(value.type)\r\n      ),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(\"formik: \",values);\r\n      handleFormSubmit(values);\r\n    },\r\n  }); \r\n\r\n  // Student\r\n  const [students, setStudent] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const handleModalClose = () => setModalShow(false);\r\n\r\n  const [pagination, setPagination] = useState({\r\n    page:0,\r\n    size:4,\r\n    totalRows: 1\r\n  });\r\n\r\n  const [filters, setFilters] = useState({\r\n    page: 0,\r\n    size: 4,\r\n  });\r\n\r\n  const [searchStudent, setSearchStudent] = useState({\r\n    keyWord: \"\",\r\n  });\r\n  \r\n  const handlePageChange = (newPage) => {\r\n    setFilters({\r\n      ...filters,\r\n      page: newPage,\r\n    })\r\n  };\r\n\r\n  const handedSearchChange = (newSearch) => {\r\n    setSearchStudent({\r\n      ...searchStudent,\r\n      keyWord: newSearch,\r\n    })\r\n  };\r\n\r\n  // Load Data\r\n  const loadData = () => {\r\n    if (searchStudent.keyWord.searchTerm == \"\" || searchStudent.keyWord == \"\") {\r\n      const paramsFilters = queryString.stringify(filters);\r\n      studentService.paginationStudent(paramsFilters).then((res) => {\r\n        const totalRows = res.data[0].totalElements;\r\n        const totalPage = res.data[0].totalPages;\r\n        const size = res.data[0].size;\r\n        const pageCurrent = res.data[0].pageable.pageNumber;\r\n        if (res.status === 0) {\r\n          setStudent(res.data[0].content);\r\n          setPagination({\r\n            page: pageCurrent,\r\n            size: size,\r\n            totalRows: totalRows,\r\n          })\r\n        }\r\n      });\r\n    }else{\r\n      const keyword = searchStudent.keyWord.searchTerm;\r\n      studentService.searchStudent(searchStudent.keyWord.searchTerm).then((res) => {\r\n        if (res.status === 0) {\r\n          setStudent(res.data);\r\n        }else{\r\n          setStudent(res.data);\r\n        }\r\n      });\r\n    }\r\n\r\n    //Get all company\r\n    companyService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setCompanies(res.data);\r\n      }\r\n    });\r\n\r\n    //Get all university\r\n    univerService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setUniver(res.data);\r\n      }\r\n    });\r\n    // Get all intake\r\n    intakeService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setIntakes(res.data);\r\n        setshowIntakes(res.data);\r\n      }\r\n    });\r\n\r\n     // Get all Student Intake\r\n     studentIntakeService.getAll().then((res) => {\r\n      if (res.status === 0) {\r\n        setAllStudentIntake(res.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  //Didmount load data major\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [filters,searchStudent]);\r\n\r\n  const getOnStudentIntake = (studentId)=> {\r\n    studentIntakeService.get(studentId).then((res) => {\r\n      const data = res.data;\r\n      console.log(\"data: \", data);\r\n    })\r\n  }\r\n\r\n\r\n  //Update Student State\r\n  const [studentId, setStudentId] = useState(0);\r\n  //Check Form Update And Add Student\r\n  const handleModalShow = (e, dataId) => {\r\n    if (e) e.preventDefault();\r\n    setStudentId(dataId);\r\n\r\n    if (dataId > 0) {\r\n      //check form Update Student\r\n      studentService.get(dataId).then((res) => {\r\n        const studentById = res.data[0];\r\n        console.log(studentById);\r\n        formik.setValues(studentById);\r\n        setSelectedUniver({value: studentById.university.id,label: studentById.university.nameUni});\r\n        setSelectedWorkingStatus({ label: studentById.workingStatus, value: studentById.workingStatus, disabled: false})\r\n        setSelectedTypeStu({ label: studentById.typeStu, value: studentById.typeStu, disabled: false})\r\n        setModalShow(true);\r\n\r\n\r\n        console.log(\"selectedIntake: \",selectedIntake);\r\n        console.log(\"All intakes: \",intakes);\r\n        console.log(\"All Student Intake: \", allStudentIntake);\r\n\r\n        setSelectedIntake([]);\r\n        for (let i = 0; i < allStudentIntake.length; i++) {\r\n          if (allStudentIntake[i].id.studentId == dataId) {\r\n            for (let j = 0; j < intakes.length; j++) {\r\n              if (intakes[j].id == allStudentIntake[i].id.intakeId) {\r\n                setSelectedIntake(oldArray => [...oldArray, {label:intakes[j].nameIntake , value:allStudentIntake[i].id.intakeId }]);\r\n              }\r\n            }\r\n            \r\n          }          \r\n        }\r\n      });\r\n      setModalUpdate(true);\r\n    } else {\r\n      setModalUpdate(false);\r\n      formik.resetForm();\r\n      setModalShow(true);\r\n    }\r\n  };\r\n\r\n  const confirmDeleteStudent = (e, studentId) => {\r\n    if (e) e.preventDefault();\r\n    confirmAlert({\r\n      title: 'Confirm to submit',\r\n      message: 'Bạn có muốn xóa sinh viên này?',\r\n      buttons: [\r\n        {\r\n          label: 'Đồng ý',\r\n          onClick: () => handleDeleteStudent(studentId)\r\n        },\r\n        {\r\n          label: 'Hủy bỏ'\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  //Delete new Student\r\n  const handleDeleteStudent = (studentId) => {\r\n    studentIntakeService.get(studentId).then((res) => {\r\n      const listIntaked = res.data;\r\n      for (let d = 0; d <= listIntaked.length; d++) {\r\n        if(d < listIntaked.length){\r\n          studentIntakeService.remove(studentId,listIntaked[d].id.intakeId).then((res) => {\r\n            if (res.status === 1) {\r\n              console.error(\"Delete Student Intake error : \" +res.status);\r\n            }\r\n          });\r\n        }else{\r\n          studentService.remove(studentId).then((res) => {\r\n            if (res.status === 0) {\r\n              toast.success(\"Delete Student Success\");\r\n              loadData();\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  //Add new Student\r\n  const handleFormSubmit = () => {\r\n    if (studentId === 0) {\r\n      studentService\r\n        .add1(\r\n          formik.values.firstName,\r\n          formik.values.lastName,\r\n          formik.values.codeStu,\r\n          formik.values.addressStu,\r\n          formik.values.phoneStu,\r\n          formik.values.emailStu,\r\n          formik.values.typeStudent.value,\r\n          formik.values.gpa,\r\n          formik.values.workingStatus.value,\r\n          formik.values.noteStu,\r\n          formik.values.image,\r\n          formik.values.createdBy,\r\n          formik.values.university.value,\r\n        )\r\n        .then((stu) => {\r\n          console.log(\"stu: \",stu);\r\n          if (stu.status === 0) {\r\n            toast.success('Add new student success');\r\n            const studentId = stu.data[0].id;\r\n            const intakeId = formik.values.intake.value;\r\n            \r\n            studentIntakeService\r\n              .add(studentId, intakeId)\r\n              .then((stuIntake) => {\r\n                loadData();\r\n              });\r\n            formik.setValues(stu.data);\r\n            loadData();\r\n            handleModalClose();\r\n          }else{\r\n            if (stu.message == \"Duplicate Email Student\") {\r\n              formik.setFieldError('emailStu',stu.message);\r\n            }\r\n            if(stu.message == \"Required request part 'image' is not present\"){\r\n              formik.setFieldError('image',stu.message);\r\n            }\r\n            if(stu.message == \"Duplicate Student Code\"){\r\n              formik.setFieldError('codeStu',stu.message);\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (typeof (formik.values.image) === \"string\") {\r\n        studentService\r\n        .updateNoImages(\r\n          studentId,\r\n          formik.values.firstName,\r\n          formik.values.lastName,\r\n          formik.values.codeStu,\r\n          formik.values.addressStu,\r\n          formik.values.phoneStu,\r\n          formik.values.emailStu,\r\n          selectedTypeStu.value,\r\n          formik.values.gpa,\r\n          selectedWorkingStatus.value,\r\n          formik.values.noteStu,\r\n          \"Admin\",\r\n          selectedUniver.value\r\n        )\r\n        .then((res) => {\r\n          const studentId = res.data[0].id;\r\n            studentIntakeService.get(studentId).then((res) => {\r\n            const arrayIntaked = Object.keys(res.data).map(function(k){return res.data[k].id.intakeId}).join(\",\");\r\n            const arrayNewIntake =  Object.keys(selectedIntake).map(function(k){return selectedIntake[k].value}).join(\",\");\r\n              studentIntakeService.updateIntakeOfStuArray(arrayNewIntake,studentId,arrayIntaked).then((res) => {\r\n                if (res.status === 0) {\r\n                  toast.success(\"Update Success\");\r\n                  console.info(\"Update Student-Intake success\");\r\n                  loadData();\r\n                  handleModalClose();\r\n                } else {\r\n                  toast.error(\"Update Student-Intake error :(\");\r\n                }\r\n              });\r\n          });\r\n        }).catch((error) => {\r\n          console.error(error);\r\n        });\r\n      }else{\r\n        studentService\r\n        .updateHasImages(\r\n          studentId,\r\n          formik.values.firstName,\r\n          formik.values.lastName,\r\n          formik.values.codeStu,\r\n          formik.values.addressStu,\r\n          formik.values.phoneStu,\r\n          formik.values.emailStu,\r\n          selectedTypeStu.value,\r\n          formik.values.gpa,\r\n          selectedWorkingStatus.value,\r\n          formik.values.noteStu,\r\n          formik.values.image,\r\n          \"Admin\",\r\n          selectedUniver.value\r\n        )\r\n        .then((res) => {\r\n          const studentId = res.data[0].id;\r\n            studentIntakeService.get(studentId).then((res) => {\r\n            const arrayIntaked = Object.keys(res.data).map(function(k){return res.data[k].id.intakeId}).join(\",\");\r\n            const arrayNewIntake =  Object.keys(selectedIntake).map(function(k){return selectedIntake[k].value}).join(\",\");\r\n              studentIntakeService.updateIntakeOfStuArray(arrayNewIntake,studentId,arrayIntaked).then((res) => {\r\n                if (res.status === 0) {\r\n                  toast.success(\"Update Success\");\r\n                  console.info(\"Update Student-Intake success\");\r\n                  loadData();\r\n                  handleModalClose();\r\n                } else {\r\n                  toast.error(\"Update Student-Intake error :(\");\r\n                }\r\n              });\r\n          });\r\n        }).catch((error) => {\r\n          console.error(error);\r\n        });\r\n      }\r\n    }\r\n    loadData();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        {/* <!-- start page title --> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"page-title-box d-flex align-items-center justify-content-between\">\r\n              <h4 className=\"mb-0 font-size-18\">Student List</h4>\r\n\r\n              <div className=\"page-title-right\">\r\n                <ol className=\"breadcrumb m-0\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a href=\"javascript: void(0);\">ISC Quang Trung</a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">\r\n                    Management Students\r\n                  </li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <!-- end page title --> */}\r\n        {/* Table */}\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row mb-2\">\r\n                    <div className=\"col-sm-4\">\r\n                      <div className=\"search-box mr-2 mb-2 d-inline-block\">\r\n                        <div className=\"position-relative\">\r\n                          <SearchStudent onSubmit={handedSearchChange}/>\r\n                          <i className=\"bx bx-search-alt search-icon\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-sm-8\">\r\n                      <div className=\"text-sm-right\">\r\n                        <button type=\"button\" onClick={() => handleModalShow(null, 0)} className=\"btn btn-success btn-rounded mb-2 mr-2\">\r\n                          <i className=\"bx bxs-add-to-queue\"/> Add New Student</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-centered table-nowrap\">\r\n                      <thead className=\"thead-light\">\r\n                        <tr>\r\n                          <th style={{width: 10}}>#</th>\r\n                          <th>Code</th>\r\n                          <th>Avatar</th>\r\n                          <th>Full name</th>\r\n                          <th>Phone</th>\r\n                          <th>Email</th>\r\n                          {/* <th>Intake</th> */}\r\n                          <th>University</th>\r\n                          <th>Status</th>\r\n                          <th>Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {students == null ? (\r\n                          <tr className=\"text-center\">\r\n                            <td colspan=\"9\">Not found student with keyword: \"<strong>{searchStudent.keyWord.searchTerm}</strong>\"!</td>\r\n                          </tr>\r\n                        ):(\r\n                          students.map((student, idx) => {\r\n                            return (\r\n                            <tr>\r\n                              <td>{idx + 1}</td>\r\n                              <td><a href=\"javascript: void(0);\" className=\"text-body font-weight-bold\">{student.codeStu}</a> </td>\r\n                              <td style={{width: 100}}>\r\n                                <img className=\"img-fluid img-thumbnai rounded mx-auto\" \r\n                                    src={api.url.image + student.image}\r\n                                    alt={\"Hinh \" + student.lastName} />\r\n                              </td>\r\n                              <td>{student.firstName} {student.lastName}</td>\r\n                              <td>{student.phoneStu}</td>\r\n                              <td>{student.emailStu}</td>\r\n                              {/* <td>ISC-13</td> */}\r\n                              <td>{student.university.nameUni}</td>\r\n                              <td>\r\n                                {(() => {\r\n                                  switch (student.typeStu) {\r\n                                    case \"Studying\":\r\n                                      return <span className=\"badge badge-pill badge-success font-size-12\">{student.typeStu}</span>;\r\n                                    case \"Graduate\":\r\n                                      return <span className=\"badge badge-pill badge-primary font-size-12\">{student.typeStu}</span>;\r\n                                    case \"Reserve\":\r\n                                      return <span className=\"badge badge-pill badge-warning font-size-12\">{student.typeStu}</span>;\r\n                                  }\r\n                                })()}\r\n                              </td>\r\n                              <td>\r\n                                <a href=\"javascript:void(0);\" onClick={(e) => handleModalShow(e, student.id)} className=\"mr-3 text-primary\"><i className=\"fas fa-user-edit font-size-15\" /></a>\r\n                                <a href=\"javascript:void(0);\" onClick={(e) => confirmDeleteStudent(e, student.id)} className=\"text-danger\"><i className=\"far fa-trash-alt font-size-15\" /></a>\r\n                              </td>\r\n                            </tr>\r\n                            );\r\n                          })\r\n                        )}\r\n                        \r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  {searchStudent.keyWord.searchTerm == \"\" || searchStudent.keyWord == \"\" ? (\r\n                  <Pagination pagination={pagination} onPageChange={handlePageChange}/>\r\n                  ) : (\"\")}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        {/* Table */}\r\n      </div>\r\n      \r\n      {/* Modal  */}\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={handleModalClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header closeButton>\r\n              {modalUpdate ? (\r\n                <Modal.Title>Update Student</Modal.Title>\r\n              ) : (\r\n                <Modal.Title>New Student</Modal.Title>\r\n              )}\r\n        </Modal.Header>\r\n        <form onSubmit={formik.handleSubmit} enctype=\"multipart/form-data\">\r\n          <Modal.Body>\r\n            <div className=\"row px-3\">         \r\n              <div className=\"col-sm-12 col-lg-2\">\r\n                <div className=\"avatar-upload-jsk py-2 text-center\">\r\n                  <div className=\"avatar-edit\">\r\n                    <input \r\n                      type=\"file\" \r\n                      name=\"image\" \r\n                      id=\"imageUpload\"\r\n                      accept=\".png, .jpg, .jpeg, .gif\"\r\n                      onChange={(event)=>{\r\n                        formik.setFieldValue(\"image\",event.currentTarget.files[0]);\r\n                        if (event.currentTarget.files && event.currentTarget.files[0]) {\r\n                            var reader = new FileReader();\r\n                            reader.onload = function(e) {\r\n                                $('#imagePreview').css('background-image', 'url('+e.target.result +')');\r\n                                $('#imagePreview').hide();\r\n                                $('#imagePreview').fadeIn(650);\r\n                            }\r\n                            reader.readAsDataURL(event.currentTarget.files[0]);\r\n                        }\r\n                      }}\r\n                    />      \r\n                  </div>\r\n                  <div className=\"avatar-preview-jsk mb-2\">\r\n                    <label htmlFor=\"imageUpload\" className=\"imageUpload\"> <i className=\"bx bxs-cloud-upload\" /></label>\r\n                    {modalUpdate ? (\r\n                     <div id=\"imagePreview\" style={{backgroundImage: 'url(\"'+api.url.image + formik.values.image +'\")'}} />\r\n                    ) : (\r\n                     <div id=\"imagePreview\" style={{backgroundImage: 'url(\"https://timvieclam.xyz/images/avata-playhoder.jpg\")'}} />\r\n                    )}\r\n                  </div>\r\n                  {(formik.touched.image && formik.errors.image)?(\r\n                    <small class=\"text-danger font-size-13 font-weight-bold m-auto pt-5\">\r\n                      Avatar is {formik.errors.image}\r\n                  </small>\r\n                  ):(\"\")}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-12 col-lg-10\">\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                      <label htmlFor=\"multicheckIntake\"> Intake<sup>*</sup> </label>\r\n                      {modalUpdate ? (\r\n                        <Fragment>\r\n                        <Select\r\n                        id=\"multicheckIntake\"\r\n                        isMulti\r\n                        defaultValue={{ label: 'ISC 13', value: 1 }}\r\n                        placeholder=\"Chọn khóa học...\"\r\n                        onChange={(val)=> {setSelectedIntake(val)}}\r\n                        value={selectedIntake}\r\n                        closeMenuOnSelect={true}\r\n                        options={intakes.map((e) => ({\r\n                          label: e.nameIntake,\r\n                          value: e.id,\r\n                          statusIntake: e.statusIntake,\r\n                        }))}\r\n                        isOptionDisabled={(option) => option.statusIntake !== 'Doing'}\r\n                      />\r\n                      {(formik.touched.intake && formik.errors.intake) ?(\r\n                        <small class=\"text-danger\">\r\n                          {formik.errors.intake}\r\n                        </small>\r\n                      ):(\"\")}\r\n                      </Fragment>\r\n                      ) : (\r\n                        <Fragment>\r\n                        <Select\r\n                          id=\"multicheckIntake\"\r\n                          placeholder=\"Chọn khóa học...\"\r\n                          onChange={(val)=> { formik.setFieldValue('intake',val) }}\r\n                          value={formik.values.intake}\r\n                          closeMenuOnSelect={true}\r\n                          options={intakes.map((e) => ({\r\n                            label: e.nameIntake,\r\n                            value: e.id,\r\n                            statusIntake: e.statusIntake,\r\n                          }))}\r\n                          isOptionDisabled={(option) => option.statusIntake !== 'Doing'}\r\n                        />\r\n                        {(formik.touched.intake && formik.errors.intake) ?(\r\n                          <small class=\"text-danger\">\r\n                            {formik.errors.intake}\r\n                          </small>\r\n                        ):(\"\")}\r\n                      </Fragment>\r\n                      )}\r\n                  \r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <label htmlFor=\"selectedUniver\"> University<sup>*</sup></label>\r\n                        <Select\r\n                            id=\"selectedUniver\"\r\n                            placeholder=\"Chọn trường...\"\r\n                            onChange={(val)=> { formik.setFieldValue('university',val) }}\r\n                            value={formik.values.university}\r\n                            closeMenuOnSelect={true}\r\n                            options={univers.map((e) => ({\r\n                              label: e.nameUni,\r\n                              value: e.id\r\n                            }))}\r\n                          />\r\n                          {(formik.touched.university && formik.errors.university) ?(\r\n                            <small class=\"text-danger\">\r\n                              {formik.errors.university}\r\n                            </small>\r\n                          ):(\"\")}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {modalUpdate ? (\r\n                      <div className=\"col-3\">\r\n                        <div class=\"form-group\">\r\n                          <label htmlFor=\"setSelectedWorkingStatus\"> Working status</label>\r\n                          <Select\r\n                              id=\"setSelectedWorkingStatus\"\r\n                              placeholder=\"Chọn trạng thái làm việc...\"\r\n                              onChange={(val)=> { formik.setFieldValue('workingStatus',val) }}\r\n                              value={formik.values.workingStatus}\r\n                              options={optionsWorkingStatus}\r\n                              closeMenuOnSelect={true}\r\n                            />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\"\")}\r\n\r\n\r\n                    <div className={`col-${modalUpdate ? (3):(6)}`}>\r\n                      <div class=\"form-group\">\r\n                        <label htmlFor=\"selectedTypeStu\"> Learing status<sup>*</sup></label>\r\n                        <Select\r\n                            id=\"selectedTypeStu\"\r\n                            placeholder=\"Chọn trạng  thái học viên...\"\r\n                            onChange={(val)=> { formik.setFieldValue('typeStudent',val) }}\r\n                            frmField={formik.getFieldProps(\"typeStudent\")}\r\n                            value={formik.values.typeStudent}\r\n                            closeMenuOnSelect={true}\r\n                            err={formik.touched.typeStudent && formik.errors.typeStudent}\r\n                            errMessage={formik.errors.typeStudent}\r\n                            options={optionsTypeStu}\r\n                          />\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"codeStu\"\r\n              name=\"codeStu\"\r\n              type=\"text\"\r\n              label=\"Student code *\"\r\n              frmField={formik.getFieldProps(\"codeStu\")}\r\n              err={formik.touched.codeStu && formik.errors.codeStu}\r\n              errMessage={formik.errors.codeStu}\r\n              value={formik.values.codeStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n            \r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuFirstName\"\r\n              type=\"text\"\r\n              label=\"First name *\"\r\n              frmField={formik.getFieldProps(\"firstName\")}\r\n              err={formik.touched.firstName && formik.errors.firstName}\r\n              errMessage={formik.errors.firstName}\r\n              value={formik.values.firstName}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuLastName\"\r\n              type=\"text\"\r\n              label=\"Last name *\"\r\n              frmField={formik.getFieldProps(\"lastName\")}\r\n              err={formik.touched.lastName && formik.errors.lastName}\r\n              errMessage={formik.errors.lastName}\r\n              value={formik.values.lastName}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuEmail\"\r\n              type=\"email\"\r\n              label=\"Email *\"\r\n              frmField={formik.getFieldProps(\"emailStu\")}\r\n              err={formik.touched.emailStu && formik.errors.emailStu}\r\n              errMessage={formik.errors.emailStu}\r\n              value={formik.values.emailStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuPhone\"\r\n              type=\"text\"\r\n              label=\"Phone number\"\r\n              frmField={formik.getFieldProps(\"phoneStu\")}\r\n              err={formik.touched.phoneStu && formik.errors.phoneStu}\r\n              errMessage={formik.errors.phoneStu}\r\n              value={formik.values.phoneStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuAddress\"\r\n              type=\"text\"\r\n              label=\"Address\"\r\n              frmField={formik.getFieldProps(\"addressStu\")}\r\n              err={formik.touched.addressStu && formik.errors.addressStu}\r\n              errMessage={formik.errors.addressStu}\r\n              value={formik.values.addressStu}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"6\"\r\n              rows=\"1\"\r\n              id=\"txtStuGPA\"\r\n              type=\"number\"\r\n              label=\"GPA *\"\r\n              frmField={formik.getFieldProps(\"gpa\")}\r\n              err={formik.touched.gpa && formik.errors.gpa}\r\n              errMessage={formik.errors.gpa}\r\n              value={formik.values.gpa}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <Input\r\n              typeInput=\"1\"\r\n              column=\"12\"\r\n              rows=\"2\"\r\n              id=\"txtStuNote\"\r\n              type=\"text\"\r\n              label=\"Note:\"\r\n              frmField={formik.getFieldProps(\"noteStu\")}\r\n              err={formik.touched.note && formik.errors.note}\r\n              errMessage={formik.errors.note}\r\n              value={formik.values.note}\r\n              onChange={formik.handleChange}\r\n            />\r\n\r\n                {modalUpdate ? (\r\n                  <Fragment>\r\n                  <Input\r\n                    typeInput=\"1\"\r\n                    column=\"6\"\r\n                    rows=\"1\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    label=\"Created by\"\r\n                    value = {`${formik.values.createdBy} - ${new Date(formik.values.createdDate).toLocaleDateString('vi-VI',{year: 'numeric', month: 'numeric', day: 'numeric', hour: \"2-digit\", minute: \"2-digit\"})}`}\r\n                  />\r\n                    {formik.values.updatedBy != null ?(\r\n                    <Fragment>\r\n                      <Input\r\n                      typeInput=\"1\"\r\n                      column=\"6\"\r\n                      rows=\"1\"\r\n                      readOnly\r\n                      type=\"text\"\r\n                      label=\"Update by\"\r\n                      value = {`${formik.values.updatedBy} - ${new Date(formik.values.updatedDate).toLocaleDateString('vi-VI',{year: 'numeric', month: 'numeric', day: 'numeric', hour: \"2-digit\", minute: \"2-digit\"})}`}\r\n                      />\r\n                    </Fragment>\r\n                    ):(\"\")}\r\n                  </Fragment>\r\n                ) : (\"\")}\r\n              \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleModalClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\intakeService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\universityService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\companyService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\api.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentIntakeService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Services\\studentCompanyService.js",[],"D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Controls\\input.jsx",["160","161","162","163","164"],"import React, { Component, Fragment} from \"react\";\r\n\r\nclass CustomInput extends Component {\r\n  state = {};\r\n  render() {\r\n    const {\r\n      typeInput, //1: Vertical(Dọc), 2: Horizontal(Ngan)\r\n      onChange,\r\n      value,\r\n      type,\r\n      id,\r\n      label,\r\n      placeHolder,\r\n      labelSize,\r\n      column, // Thêm cột Column BootStrap VD: column=\"6\"->col-sm-6\r\n      inputRef,\r\n      frmField,\r\n      err,\r\n      errMessage,\r\n      ...others\r\n    } = this.props;\r\n\r\n    const typeinput = typeInput ? typeInput : \"1\";\r\n    const size = labelSize ? labelSize : 3;\r\n    const classLeft = `col-sm-${size} col-form-label text-center`;\r\n    const ColumnClass = `col-sm-${column}`;\r\n    const classRight = `col-sm-${12 - size}`;\r\n    const inputClass = `form-control  ${err ? \"is-invalid\" : \"\"}`;\r\n\r\n    return (\r\n      <Fragment>\r\n            {(() => {\r\n                switch(typeinput) {\r\n                  case \"1\":\r\n                    return(\r\n                      <div className={ColumnClass}>\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"formrow-email-input\">{label}</label>\r\n                          {others[\"rows\"] == 1 ? (\r\n                            <input\r\n                              onChange={onChange}\r\n                              value={value}\r\n                              ref={inputRef}\r\n                              type={type}\r\n                              className={inputClass}\r\n                              id={id}\r\n                              placeholder={placeHolder}\r\n                              {...frmField}\r\n                              {...others}\r\n                            />\r\n                          ) : (\r\n                            <textarea\r\n                              ref={inputRef}\r\n                              className={inputClass}\r\n                              id={id}\r\n                              type={type}\r\n                              placeholder={placeHolder}\r\n                              {...frmField}\r\n                              {...others}\r\n                            ></textarea>\r\n                          )}\r\n                          {err ? <div className=\"invalid-feedback\">{errMessage}</div> : null}\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  break;\r\n\r\n                  case \"2\":\r\n                    return(\r\n                      <div className={ColumnClass}>\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor={id} className={classLeft}>\r\n                            {label}\r\n                          </label>\r\n                          <div className={classRight}>\r\n                            {others[\"rows\"] == 1 ? (\r\n                              <input\r\n                                onChange={onChange}\r\n                                value={value}\r\n                                ref={inputRef}\r\n                                type={type}\r\n                                className={inputClass}\r\n                                id={id}\r\n                                placeholder={placeHolder}\r\n                                {...frmField}\r\n                                {...others}\r\n                              />\r\n                            ) : (\r\n                              <textarea\r\n                                ref={inputRef}\r\n                                className={inputClass}\r\n                                id={id}\r\n                                type={type}\r\n                                placeholder={placeHolder}\r\n                                {...frmField}\r\n                                {...others}\r\n                              ></textarea>\r\n                            )}\r\n                            {err ? <div className=\"invalid-feedback\">{errMessage}</div> : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  break;\r\n                }\r\n            })()}\r\n        </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default CustomInput;\r\n","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\paginationStudent.jsx",["165","166","167","168","169","170","171","172","173","174"],"import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nPagination.propTypes = {\r\n  pagination: PropTypes.object.isRequired,\r\n  onPageChange: PropTypes.func,\r\n};\r\n\r\nPagination.defaultProps = {\r\n  onPageChange: null,\r\n}\r\n\r\nfunction Pagination(props) {\r\n  const {pagination, onPageChange} = props;\r\n  const {page,size,totalRows} = pagination;\r\n  const totalPage = Math.ceil(totalRows/size);\r\n\r\n  function handlePageChange(newPage) {\r\n    if(onPageChange){\r\n      onPageChange(newPage);\r\n    }\r\n  }\r\n  return(\r\n    <div>\r\n      <ul className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n      <div className=\"mt-1 mr-2 mr-auto\">Total <strong>{totalRows}</strong> Student</div>\r\n        {page == 0 ?(\r\n          <li className=\"page-item disabled\">\r\n          <a className=\"page-link\" href=\"javascript: void(0);\" onClick={()=>handlePageChange(page-1)}>\r\n            <i class=\"fas fa-chevron-right fa-flip-horizontal\"></i>\r\n          </a>\r\n        </li>\r\n        ):(\r\n          <li className=\"page-item \">\r\n          <a className=\"page-link\" href=\"javascript: void(0);\" onClick={()=>handlePageChange(page-1)}>\r\n            <i class=\"fas fa-chevron-right fa-flip-horizontal\"></i>\r\n          </a>\r\n        </li>\r\n        )}\r\n        \r\n        <li className=\"page-item py-1 px-2 active text-dark\">Trang {page+1}/{totalPage}</li>\r\n\r\n        {page == totalPage-1 ?(\r\n        <li className=\"page-item disabled\">\r\n          <a className=\"page-link\" href=\"javascript: void(0);\" onClick={()=>handlePageChange(page+1)}>\r\n            <i class=\"fas fa-chevron-right\"></i>\r\n          </a>\r\n        </li>\r\n        ):(\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"javascript: void(0);\" onClick={()=>handlePageChange(page+1)}>\r\n              <i class=\"fas fa-chevron-right\"></i>\r\n            </a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;","D:\\Intership ISC\\ISC-Trainees-Management\\ReactJS-Dungdq\\src\\Pages\\Student\\searchStudent.jsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":56,"column":17,"nodeType":"185","endLine":56,"endColumn":60},{"ruleId":"183","severity":1,"message":"184","line":62,"column":17,"nodeType":"185","endLine":62,"endColumn":60},{"ruleId":"183","severity":1,"message":"184","line":68,"column":17,"nodeType":"185","endLine":68,"endColumn":60},{"ruleId":"183","severity":1,"message":"184","line":94,"column":17,"nodeType":"185","endLine":94,"endColumn":47},{"ruleId":"183","severity":1,"message":"186","line":99,"column":13,"nodeType":"185","endLine":99,"endColumn":57},{"ruleId":"183","severity":1,"message":"186","line":115,"column":13,"nodeType":"185","endLine":115,"endColumn":58},{"ruleId":"183","severity":1,"message":"186","line":127,"column":13,"nodeType":"185","endLine":127,"endColumn":58},{"ruleId":"183","severity":1,"message":"186","line":143,"column":13,"nodeType":"185","endLine":143,"endColumn":58},{"ruleId":"183","severity":1,"message":"184","line":157,"column":13,"nodeType":"185","endLine":157,"endColumn":92},{"ruleId":"183","severity":1,"message":"184","line":171,"column":11,"nodeType":"185","endLine":171,"endColumn":49},{"ruleId":"183","severity":1,"message":"184","line":172,"column":11,"nodeType":"185","endLine":172,"endColumn":57},{"ruleId":"183","severity":1,"message":"184","line":173,"column":11,"nodeType":"185","endLine":173,"endColumn":49},{"ruleId":"183","severity":1,"message":"184","line":175,"column":11,"nodeType":"185","endLine":175,"endColumn":61},{"ruleId":"187","severity":1,"message":"188","line":21,"column":11,"nodeType":"185","endLine":21,"endColumn":58},{"ruleId":"187","severity":1,"message":"188","line":32,"column":11,"nodeType":"185","endLine":32,"endColumn":58},{"ruleId":"187","severity":1,"message":"188","line":45,"column":11,"nodeType":"185","endLine":45,"endColumn":58},{"ruleId":"179","severity":1,"message":"189","line":2,"column":13,"nodeType":"181","messageId":"182","endLine":2,"endColumn":16},{"ruleId":"179","severity":1,"message":"190","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":14},{"ruleId":"179","severity":1,"message":"191","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":19},{"ruleId":"179","severity":1,"message":"192","line":20,"column":8,"nodeType":"181","messageId":"182","endLine":20,"endColumn":29},{"ruleId":"179","severity":1,"message":"193","line":34,"column":9,"nodeType":"181","messageId":"182","endLine":34,"endColumn":13},{"ruleId":"179","severity":1,"message":"194","line":35,"column":9,"nodeType":"181","messageId":"182","endLine":35,"endColumn":14},{"ruleId":"179","severity":1,"message":"195","line":37,"column":10,"nodeType":"181","messageId":"182","endLine":37,"endColumn":23},{"ruleId":"179","severity":1,"message":"196","line":38,"column":10,"nodeType":"181","messageId":"182","endLine":38,"endColumn":21},{"ruleId":"179","severity":1,"message":"197","line":38,"column":23,"nodeType":"181","messageId":"182","endLine":38,"endColumn":37},{"ruleId":"179","severity":1,"message":"198","line":39,"column":10,"nodeType":"181","messageId":"182","endLine":39,"endColumn":18},{"ruleId":"179","severity":1,"message":"199","line":39,"column":20,"nodeType":"181","messageId":"182","endLine":39,"endColumn":31},{"ruleId":"179","severity":1,"message":"200","line":40,"column":10,"nodeType":"181","messageId":"182","endLine":40,"endColumn":17},{"ruleId":"179","severity":1,"message":"201","line":40,"column":19,"nodeType":"181","messageId":"182","endLine":40,"endColumn":29},{"ruleId":"179","severity":1,"message":"202","line":41,"column":10,"nodeType":"181","messageId":"182","endLine":41,"endColumn":19},{"ruleId":"179","severity":1,"message":"203","line":41,"column":21,"nodeType":"181","messageId":"182","endLine":41,"endColumn":33},{"ruleId":"179","severity":1,"message":"204","line":42,"column":9,"nodeType":"181","messageId":"182","endLine":42,"endColumn":19},{"ruleId":"179","severity":1,"message":"205","line":46,"column":10,"nodeType":"181","messageId":"182","endLine":46,"endColumn":19},{"ruleId":"179","severity":1,"message":"206","line":47,"column":9,"nodeType":"181","messageId":"182","endLine":47,"endColumn":22},{"ruleId":"179","severity":1,"message":"207","line":72,"column":10,"nodeType":"181","messageId":"182","endLine":72,"endColumn":25},{"ruleId":"179","severity":1,"message":"208","line":72,"column":27,"nodeType":"181","messageId":"182","endLine":72,"endColumn":45},{"ruleId":"179","severity":1,"message":"209","line":73,"column":10,"nodeType":"181","messageId":"182","endLine":73,"endColumn":19},{"ruleId":"210","severity":1,"message":"211","line":87,"column":12,"nodeType":"181","messageId":"212","endLine":87,"endColumn":13},{"ruleId":"179","severity":1,"message":"213","line":96,"column":10,"nodeType":"181","messageId":"182","endLine":96,"endColumn":25},{"ruleId":"179","severity":1,"message":"214","line":96,"column":27,"nodeType":"181","messageId":"182","endLine":96,"endColumn":45},{"ruleId":"179","severity":1,"message":"215","line":97,"column":10,"nodeType":"181","messageId":"182","endLine":97,"endColumn":21},{"ruleId":"216","severity":1,"message":"217","line":120,"column":7,"nodeType":"218","messageId":"219","endLine":120,"endColumn":12},{"ruleId":"220","severity":1,"message":"221","line":199,"column":42,"nodeType":"222","messageId":"219","endLine":199,"endColumn":44},{"ruleId":"220","severity":1,"message":"221","line":199,"column":73,"nodeType":"222","messageId":"219","endLine":199,"endColumn":75},{"ruleId":"179","severity":1,"message":"223","line":203,"column":15,"nodeType":"181","messageId":"182","endLine":203,"endColumn":24},{"ruleId":"179","severity":1,"message":"224","line":216,"column":13,"nodeType":"181","messageId":"182","endLine":216,"endColumn":20},{"ruleId":"225","severity":1,"message":"226","line":258,"column":6,"nodeType":"227","endLine":258,"endColumn":29,"suggestions":"228"},{"ruleId":"179","severity":1,"message":"229","line":260,"column":9,"nodeType":"181","messageId":"182","endLine":260,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":293,"column":48,"nodeType":"222","messageId":"219","endLine":293,"endColumn":50},{"ruleId":"220","severity":1,"message":"221","line":295,"column":33,"nodeType":"222","messageId":"219","endLine":295,"endColumn":35},{"ruleId":"220","severity":1,"message":"221","line":388,"column":29,"nodeType":"222","messageId":"219","endLine":388,"endColumn":31},{"ruleId":"220","severity":1,"message":"221","line":391,"column":28,"nodeType":"222","messageId":"219","endLine":391,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":394,"column":28,"nodeType":"222","messageId":"219","endLine":394,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":490,"column":21,"nodeType":"185","endLine":490,"endColumn":52},{"ruleId":"230","severity":1,"message":"231","line":490,"column":29,"nodeType":"232","messageId":"233","endLine":490,"endColumn":51},{"ruleId":"183","severity":1,"message":"184","line":548,"column":35,"nodeType":"185","endLine":548,"endColumn":105},{"ruleId":"230","severity":1,"message":"231","line":548,"column":43,"nodeType":"232","messageId":"233","endLine":548,"endColumn":65},{"ruleId":"234","severity":1,"message":"235","line":561,"column":35,"nodeType":"236","messageId":"237","endLine":568,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":572,"column":33,"nodeType":"185","endLine":572,"endColumn":141},{"ruleId":"230","severity":1,"message":"231","line":572,"column":41,"nodeType":"232","messageId":"233","endLine":572,"endColumn":62},{"ruleId":"183","severity":1,"message":"184","line":573,"column":33,"nodeType":"185","endLine":573,"endColumn":140},{"ruleId":"230","severity":1,"message":"231","line":573,"column":41,"nodeType":"232","messageId":"233","endLine":573,"endColumn":62},{"ruleId":"220","severity":1,"message":"221","line":583,"column":53,"nodeType":"222","messageId":"219","endLine":583,"endColumn":55},{"ruleId":"220","severity":1,"message":"221","line":583,"column":84,"nodeType":"222","messageId":"219","endLine":583,"endColumn":86},{"ruleId":"234","severity":1,"message":"235","line":33,"column":17,"nodeType":"236","messageId":"237","endLine":105,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":39,"column":43,"nodeType":"222","messageId":"219","endLine":39,"endColumn":45},{"ruleId":"238","severity":1,"message":"239","line":66,"column":19,"nodeType":"240","messageId":"241","endLine":66,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":76,"column":45,"nodeType":"222","messageId":"219","endLine":76,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":104,"column":19,"nodeType":"240","messageId":"241","endLine":104,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":27,"column":15,"nodeType":"222","messageId":"219","endLine":27,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":29,"column":11,"nodeType":"185","endLine":29,"endColumn":103},{"ruleId":"230","severity":1,"message":"231","line":29,"column":41,"nodeType":"232","messageId":"233","endLine":29,"endColumn":63},{"ruleId":"183","severity":1,"message":"184","line":35,"column":11,"nodeType":"185","endLine":35,"endColumn":103},{"ruleId":"230","severity":1,"message":"231","line":35,"column":41,"nodeType":"232","messageId":"233","endLine":35,"endColumn":63},{"ruleId":"220","severity":1,"message":"221","line":43,"column":15,"nodeType":"222","messageId":"219","endLine":43,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":45,"column":11,"nodeType":"185","endLine":45,"endColumn":103},{"ruleId":"230","severity":1,"message":"231","line":45,"column":41,"nodeType":"232","messageId":"233","endLine":45,"endColumn":63},{"ruleId":"183","severity":1,"message":"184","line":51,"column":13,"nodeType":"185","endLine":51,"endColumn":105},{"ruleId":"230","severity":1,"message":"231","line":51,"column":43,"nodeType":"232","messageId":"233","endLine":51,"endColumn":65},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role list. This role is implicit on the element ul.","'map' is defined but never used.","'Link' is defined but never used.","'MultiSelect' is defined but never used.","'studentCompanyService' is defined but never used.","'test' is assigned a value but never used.","'test2' is assigned a value but never used.","'selectedFiles' is assigned a value but never used.","'currentFile' is assigned a value but never used.","'setCurrentFile' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'fileInfos' is assigned a value but never used.","'setFileInfos' is assigned a value but never used.","'selectFile' is assigned a value but never used.","'oneUniver' is assigned a value but never used.","'showOneUniver' is assigned a value but never used.","'selectedCompany' is assigned a value but never used.","'setSelectedCompany' is assigned a value but never used.","'companies' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'studentIntakeId' is assigned a value but never used.","'setStudentIntakeId' is assigned a value but never used.","'showIntakes' is assigned a value but never used.","no-dupe-keys","Duplicate key 'image'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'totalPage' is assigned a value but never used.","'keyword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["244"],"'getOnStudentIntake' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [filters, loadData, searchStudent]",{"range":"247","text":"248"},[7990,8013],"[filters, loadData, searchStudent]"]